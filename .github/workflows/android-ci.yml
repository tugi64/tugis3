name: Android CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read
  id-token: write
  pull-requests: write

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 35
    env:
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.incremental=true -Dorg.gradle.configuration-cache=true
      TERM: dumb
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Restore Gradle Caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Show Gradle & Kotlin versions
        run: ./gradlew -version

      - name: Build (Assemble Debug)
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon
        env:
          CI: true

      - name: Unit Tests
        run: ./gradlew testDebugUnitTest --stacktrace --no-daemon
        env:
          CI: true

      - name: Lint (Optional, ignore failure)
        run: |
          ./gradlew lintDebug || echo "Lint failed (non-blocking)"

      - name: Detekt (Optional, ignore failure)
        run: |
          if [ -f detekt.yml ]; then ./gradlew detekt || echo "Detekt failed (non-blocking)"; fi

      - name: Show APK size
        if: success()
        run: |
          echo "APK dosyalari:" 
          ls -lh app/build/outputs/apk/debug/ || true
          echo "Toplam boyut:" 
          du -sh app/build/outputs/apk/debug || true
          echo "En büyük ilk 10 dosya:" 
          (command -v sort >/dev/null 2>&1 && command -v awk >/dev/null 2>&1 && find app/build/outputs/apk/debug -type f -printf '%s %p\n' | sort -nr | head -10 | awk '{printf "%9.1f KB  %s\n", $1/1024, $2}') || true
          test -f app/build/outputs/apk/debug/app-debug.apk && echo "Primary APK bulundu." || echo "Uyari: app-debug.apk bulunamadi (variant adi farkli olabilir)."

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
          retention-days: 14

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            app/build/reports/tests
            **/build/reports/lint-results*.html
            **/build/reports/detekt
          if-no-files-found: ignore
          retention-days: 14

      # Cache save adimi ayri gerekmiyor; actions/cache otomatik saklar
      # Gelecekte ek job: instrumentation / benchmark
