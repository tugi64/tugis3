name: Android CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
            restore-keys: |
              gradle-${{ runner.os }}-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build (Assemble)
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Run Unit Tests
        run: ./gradlew :app:testDebugUnitTest --stacktrace --no-daemon

      - name: Android Lint
        run: ./gradlew :app:lintDebug --stacktrace --no-daemon

      - name: Detekt Static Analysis
        run: ./gradlew detekt --no-daemon --stacktrace

      - name: Ktlint Style Check
        run: ./gradlew ktlintCheck --no-daemon --stacktrace

      - name: Collect Reports
        if: always()
        run: |
          mkdir -p ci-artifacts/lint ci-artifacts/detekt ci-artifacts/ktlint
          cp -r app/build/reports/lint/* ci-artifacts/lint/ 2>/dev/null || true
          cp -r build/reports/detekt/* ci-artifacts/detekt/ 2>/dev/null || true
          # Ktlint raporları (varsayılan yoksa atlanır)
          cp -r build/reports/ktlint/* ci-artifacts/ktlint/ 2>/dev/null || true

      - name: Upload Reports Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: ci-artifacts

  # Instrumented tests (optional) - needs emulator; uncomment to enable
  # connected-tests:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 17
  #     - name: Install SDK packages
  #       uses: android-actions/setup-android@v3
  #     - name: Create AVD
  #       run: |
  #         sdkmanager --install "system-images;android-34;google_apis;x86_64"
  #         echo "no" | avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" --device "pixel_5"
  #     - name: Launch Emulator
  #       run: |
  #         nohup emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio &
  #         adb wait-for-device
  #     - name: Connected Android Tests
  #       run: ./gradlew :app:connectedDebugAndroidTest --no-daemon --stacktrace
